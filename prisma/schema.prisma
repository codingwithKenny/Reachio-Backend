// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int        @id @default(autoincrement())
  email      String     @unique
  password   String
  firstName       String
  lastName       String
 phoneNumber String   @unique
   businesses Business[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Business {
  id         Int        @id @default(autoincrement())
  name       String
  user       User       @relation(fields: [userId], references: [id])
  userId     Int
  customers  Customer[]
  templates  Template[]
  campaigns  Campaign[]
  messages   Message[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Customer {
  id          Int        @id @default(autoincrement())
  name        String
  email       String?    @unique
  phone       String?    @unique
  birthday    DateTime?
  business    Business   @relation(fields: [businessId], references: [id])
  businessId  Int
  messages    Message[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Template {
  id          Int        @id @default(autoincrement())
  title       String
  content     String     // can include placeholders {customerName}, {businessName}
  type        TemplateType
  isAiGenerated Boolean   @default(false)  // true if AI-generated
  business    Business   @relation(fields: [businessId], references: [id])
  businessId  Int
  campaigns   Campaign[]
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

model Campaign {
  id          Int        @id @default(autoincrement())
  title       String
  description String?
  scheduledAt DateTime?
  autoSend    Boolean     @default(false)
  business    Business    @relation(fields: [businessId], references: [id])
  businessId  Int
  template    Template?   @relation(fields: [templateId], references: [id])
  templateId  Int?
  messages    Message[]
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Message {
  id          Int        @id @default(autoincrement())
  content     String
  isAiGenerated Boolean   @default(false)  // true if AI generated but can be edited
  status      MessageStatus @default(PENDING)
  sentAt      DateTime?
  business    Business   @relation(fields: [businessId], references: [id])
  businessId  Int
  campaign    Campaign?  @relation(fields: [campaignId], references: [id])
  campaignId  Int?
  customer    Customer   @relation(fields: [customerId], references: [id])
  customerId  Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
}

enum TemplateType {
  NEW_MONTH
  BIRTHDAY
  PROMO
  THANK_YOU
  NEW_ARRIVAL
  REFERRAL
  CUSTOM
}

enum MessageStatus {
  PENDING
  SENT
  FAILED
}

